// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: rpcdata.proto
// Protobuf Java Version: 4.32.0

package com.qifly.core.protocol.data.protobuf;

/**
 * Protobuf enum {@code RpcStatusCode}
 */
@com.google.protobuf.Generated
public enum RpcStatusCode
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>RPC_SUCCESS = 0;</code>
   */
  RPC_SUCCESS(0),
  /**
   * <pre>
   * 通用错误
   * </pre>
   *
   * <code>RPC_UNKNOWN_ERROR = 1000;</code>
   */
  RPC_UNKNOWN_ERROR(1000),
  /**
   * <pre>
   * 服务未找到
   * </pre>
   *
   * <code>RPC_SERVICE_NOT_FOUND_ERROR = 1001;</code>
   */
  RPC_SERVICE_NOT_FOUND_ERROR(1001),
  /**
   * <pre>
   * 方法未找到
   * </pre>
   *
   * <code>RPC_METHOD_NOT_FOUND_ERROR = 1002;</code>
   */
  RPC_METHOD_NOT_FOUND_ERROR(1002),
  /**
   * <pre>
   * 请求内容错误
   * </pre>
   *
   * <code>RPC_METHOD_REQUEST_ERROR = 1003;</code>
   */
  RPC_METHOD_REQUEST_ERROR(1003),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 0,
      /* suffix= */ "",
      RpcStatusCode.class.getName());
  }
  /**
   * <code>RPC_SUCCESS = 0;</code>
   */
  public static final int RPC_SUCCESS_VALUE = 0;
  /**
   * <pre>
   * 通用错误
   * </pre>
   *
   * <code>RPC_UNKNOWN_ERROR = 1000;</code>
   */
  public static final int RPC_UNKNOWN_ERROR_VALUE = 1000;
  /**
   * <pre>
   * 服务未找到
   * </pre>
   *
   * <code>RPC_SERVICE_NOT_FOUND_ERROR = 1001;</code>
   */
  public static final int RPC_SERVICE_NOT_FOUND_ERROR_VALUE = 1001;
  /**
   * <pre>
   * 方法未找到
   * </pre>
   *
   * <code>RPC_METHOD_NOT_FOUND_ERROR = 1002;</code>
   */
  public static final int RPC_METHOD_NOT_FOUND_ERROR_VALUE = 1002;
  /**
   * <pre>
   * 请求内容错误
   * </pre>
   *
   * <code>RPC_METHOD_REQUEST_ERROR = 1003;</code>
   */
  public static final int RPC_METHOD_REQUEST_ERROR_VALUE = 1003;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static RpcStatusCode valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static RpcStatusCode forNumber(int value) {
    switch (value) {
      case 0: return RPC_SUCCESS;
      case 1000: return RPC_UNKNOWN_ERROR;
      case 1001: return RPC_SERVICE_NOT_FOUND_ERROR;
      case 1002: return RPC_METHOD_NOT_FOUND_ERROR;
      case 1003: return RPC_METHOD_REQUEST_ERROR;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<RpcStatusCode>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      RpcStatusCode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<RpcStatusCode>() {
          public RpcStatusCode findValueByNumber(int number) {
            return RpcStatusCode.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.qifly.core.protocol.data.protobuf.RpcData.getDescriptor().getEnumTypes().get(0);
  }

  private static final RpcStatusCode[] VALUES = values();

  public static RpcStatusCode valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private RpcStatusCode(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:RpcStatusCode)
}

